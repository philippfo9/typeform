import "reflect-metadata";
export declare function replaceAll(target: string, search: string, replacement: string): string;
export declare function getTypeFromTarget(target: any, key: string): string;
export declare function getType(value: any): string;
export declare function preAppendix(transformStr: string, preText: string): string;
export declare function appendix(transformStr: string, appendText: string): string;
export declare function generatePlural(word: string): string;
export declare function generateStandardTsOutput(classTitle: any, selector: any, classPrefix: any, templateUrl: any): string;
export declare function generateFormGroupDefinitions(classToGenerate: object): string;
export declare function mapClassTags(strInput: string): string;
export declare function removeDisabledAttributes(strInput: string, lwcClassTitle: any): string;
export declare function removeFormControlNameAttributes(strInput: string): string;
export declare function createAddElementFunction(className: string, pluralClassTitle: string, classToGenerate: any, formGroupActivated: boolean): string;
export declare function createRemoveElementFunction(className: string, pluralClassTitle: string, formGroupActivated: boolean): string;
export declare function createUpdateElementFunction(className: string): string;
export declare function createEnableChangeFunction(lwcClassTitle: string): string;
export declare function createCancelChangeFunction(className: string): string;
declare let tagsToReplace: string[];
declare let normalTags: string[];
export { tagsToReplace, normalTags };
